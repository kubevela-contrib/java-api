/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.oam.core.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import dev.oam.core.models.V1beta1DefinitionRevisionSpecComponentDefinition;
import dev.oam.core.models.V1beta1DefinitionRevisionSpecPolicyDefinition;
import dev.oam.core.models.V1beta1DefinitionRevisionSpecTraitDefinition;
import dev.oam.core.models.V1beta1DefinitionRevisionSpecWorkflowStepDefinition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DefinitionRevisionSpec is the spec of DefinitionRevision
 */
@ApiModel(description = "DefinitionRevisionSpec is the spec of DefinitionRevision")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-19T04:50:27.278Z[Etc/UTC]")
public class V1beta1DefinitionRevisionSpec {
  public static final String SERIALIZED_NAME_COMPONENT_DEFINITION = "componentDefinition";
  @SerializedName(SERIALIZED_NAME_COMPONENT_DEFINITION)
  private V1beta1DefinitionRevisionSpecComponentDefinition componentDefinition;

  /**
   * DefinitionType
   */
  @JsonAdapter(DefinitionTypeEnum.Adapter.class)
  public enum DefinitionTypeEnum {
    COMPONENT("Component"),
    
    TRAIT("Trait"),
    
    POLICY("Policy"),
    
    WORKFLOWSTEP("WorkflowStep");

    private String value;

    DefinitionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefinitionTypeEnum fromValue(String value) {
      for (DefinitionTypeEnum b : DefinitionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DefinitionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefinitionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefinitionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DefinitionTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DEFINITION_TYPE = "definitionType";
  @SerializedName(SERIALIZED_NAME_DEFINITION_TYPE)
  private DefinitionTypeEnum definitionType;

  public static final String SERIALIZED_NAME_POLICY_DEFINITION = "policyDefinition";
  @SerializedName(SERIALIZED_NAME_POLICY_DEFINITION)
  private V1beta1DefinitionRevisionSpecPolicyDefinition policyDefinition;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private Long revision;

  public static final String SERIALIZED_NAME_REVISION_HASH = "revisionHash";
  @SerializedName(SERIALIZED_NAME_REVISION_HASH)
  private String revisionHash;

  public static final String SERIALIZED_NAME_TRAIT_DEFINITION = "traitDefinition";
  @SerializedName(SERIALIZED_NAME_TRAIT_DEFINITION)
  private V1beta1DefinitionRevisionSpecTraitDefinition traitDefinition;

  public static final String SERIALIZED_NAME_WORKFLOW_STEP_DEFINITION = "workflowStepDefinition";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STEP_DEFINITION)
  private V1beta1DefinitionRevisionSpecWorkflowStepDefinition workflowStepDefinition;


  public V1beta1DefinitionRevisionSpec componentDefinition(V1beta1DefinitionRevisionSpecComponentDefinition componentDefinition) {
    
    this.componentDefinition = componentDefinition;
    return this;
  }

   /**
   * Get componentDefinition
   * @return componentDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1DefinitionRevisionSpecComponentDefinition getComponentDefinition() {
    return componentDefinition;
  }


  public void setComponentDefinition(V1beta1DefinitionRevisionSpecComponentDefinition componentDefinition) {
    this.componentDefinition = componentDefinition;
  }


  public V1beta1DefinitionRevisionSpec definitionType(DefinitionTypeEnum definitionType) {
    
    this.definitionType = definitionType;
    return this;
  }

   /**
   * DefinitionType
   * @return definitionType
  **/
  @ApiModelProperty(required = true, value = "DefinitionType")

  public DefinitionTypeEnum getDefinitionType() {
    return definitionType;
  }


  public void setDefinitionType(DefinitionTypeEnum definitionType) {
    this.definitionType = definitionType;
  }


  public V1beta1DefinitionRevisionSpec policyDefinition(V1beta1DefinitionRevisionSpecPolicyDefinition policyDefinition) {
    
    this.policyDefinition = policyDefinition;
    return this;
  }

   /**
   * Get policyDefinition
   * @return policyDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1DefinitionRevisionSpecPolicyDefinition getPolicyDefinition() {
    return policyDefinition;
  }


  public void setPolicyDefinition(V1beta1DefinitionRevisionSpecPolicyDefinition policyDefinition) {
    this.policyDefinition = policyDefinition;
  }


  public V1beta1DefinitionRevisionSpec revision(Long revision) {
    
    this.revision = revision;
    return this;
  }

   /**
   * Revision record revision number of DefinitionRevision
   * @return revision
  **/
  @ApiModelProperty(required = true, value = "Revision record revision number of DefinitionRevision")

  public Long getRevision() {
    return revision;
  }


  public void setRevision(Long revision) {
    this.revision = revision;
  }


  public V1beta1DefinitionRevisionSpec revisionHash(String revisionHash) {
    
    this.revisionHash = revisionHash;
    return this;
  }

   /**
   * RevisionHash record the hash value of the spec of DefinitionRevision object.
   * @return revisionHash
  **/
  @ApiModelProperty(required = true, value = "RevisionHash record the hash value of the spec of DefinitionRevision object.")

  public String getRevisionHash() {
    return revisionHash;
  }


  public void setRevisionHash(String revisionHash) {
    this.revisionHash = revisionHash;
  }


  public V1beta1DefinitionRevisionSpec traitDefinition(V1beta1DefinitionRevisionSpecTraitDefinition traitDefinition) {
    
    this.traitDefinition = traitDefinition;
    return this;
  }

   /**
   * Get traitDefinition
   * @return traitDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1DefinitionRevisionSpecTraitDefinition getTraitDefinition() {
    return traitDefinition;
  }


  public void setTraitDefinition(V1beta1DefinitionRevisionSpecTraitDefinition traitDefinition) {
    this.traitDefinition = traitDefinition;
  }


  public V1beta1DefinitionRevisionSpec workflowStepDefinition(V1beta1DefinitionRevisionSpecWorkflowStepDefinition workflowStepDefinition) {
    
    this.workflowStepDefinition = workflowStepDefinition;
    return this;
  }

   /**
   * Get workflowStepDefinition
   * @return workflowStepDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1DefinitionRevisionSpecWorkflowStepDefinition getWorkflowStepDefinition() {
    return workflowStepDefinition;
  }


  public void setWorkflowStepDefinition(V1beta1DefinitionRevisionSpecWorkflowStepDefinition workflowStepDefinition) {
    this.workflowStepDefinition = workflowStepDefinition;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta1DefinitionRevisionSpec v1beta1DefinitionRevisionSpec = (V1beta1DefinitionRevisionSpec) o;
    return Objects.equals(this.componentDefinition, v1beta1DefinitionRevisionSpec.componentDefinition) &&
        Objects.equals(this.definitionType, v1beta1DefinitionRevisionSpec.definitionType) &&
        Objects.equals(this.policyDefinition, v1beta1DefinitionRevisionSpec.policyDefinition) &&
        Objects.equals(this.revision, v1beta1DefinitionRevisionSpec.revision) &&
        Objects.equals(this.revisionHash, v1beta1DefinitionRevisionSpec.revisionHash) &&
        Objects.equals(this.traitDefinition, v1beta1DefinitionRevisionSpec.traitDefinition) &&
        Objects.equals(this.workflowStepDefinition, v1beta1DefinitionRevisionSpec.workflowStepDefinition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentDefinition, definitionType, policyDefinition, revision, revisionHash, traitDefinition, workflowStepDefinition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta1DefinitionRevisionSpec {\n");
    sb.append("    componentDefinition: ").append(toIndentedString(componentDefinition)).append("\n");
    sb.append("    definitionType: ").append(toIndentedString(definitionType)).append("\n");
    sb.append("    policyDefinition: ").append(toIndentedString(policyDefinition)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    revisionHash: ").append(toIndentedString(revisionHash)).append("\n");
    sb.append("    traitDefinition: ").append(toIndentedString(traitDefinition)).append("\n");
    sb.append("    workflowStepDefinition: ").append(toIndentedString(workflowStepDefinition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

